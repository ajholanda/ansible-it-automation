# {{ ansible_managed }}

# See the sshd_config(5) manpage for details about the syntax/commands.

## Specifies what environment variables sent by the client will be
# copied into the session's environ(7).  See SendEnv and SetEnv in
# ssh_config(5) for how to configure the client.  The TERM environment
# variable is always accepted whenever the client requests a
# pseudo-terminal as it is required by the protocol.  Variables are
# specified by name, which may contain the wildcard characters ‘*’ and
# ‘?’.  Multiple environment variables may be sepa‐ rated by
# whitespace or spread across multiple AcceptEnv directives.  Be
# warned that some environment variables could be used to bypass
# restricted user environments.  For this reason, care should be taken
# in the use of this directive.  The default is not to accept any
# environment variables.
##
AcceptEnv LANG LC_*

## Specifies the port number that sshd(8) listens on.  The default is
#  22.  Multiple options of this type are permitted.  See also
#  ListenAddress.
##
Port 22

## Specifies a file containing a private host key used by SSH.  The
# defaults are /etc/ssh/ssh_host_ecdsa_key,
# /etc/ssh/ssh_host_ed25519_key and /etc/ssh/ssh_host_rsa_key.  Note
# that sshd(8) will refuse to use a file if it is
# group/world-accessible and that the HostKeyAlgorithms option
# restricts which of# the keys are actually used by sshd(8).  It is
# possible to have multiple host key files.  It is also possible to
# specify public host key files instead.  In this case operations on
# the pri‐ vate key will be delegated to an ssh-agent(1).
##
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
HostKey /etc/ssh/ssh_host_ecdsa_key

####
# If you want to allow local users to connect using ssh,
# add them to local group 'users' using
# $ sudo usermod -a -G users <username>
#
# Don't use ssh as local group to add users because ssh daemon
# use it to associate group ownership to its processes.
####
{% if sshserver_allow_groups is defined %}
AllowGroups{% for group in sshserver_allow_groups %} {{ group }}{% endfor %}
{% endif %}

## Gives the verbosity level that is used when logging messages from
# sshd(8).  The possible values are: QUIET, FATAL, ERROR, INFO,
# VERBOSE, DEBUG, DE‐ BUG1, DEBUG2, and DEBUG3.  The default is INFO.
# DEBUG and DEBUG1 are equivalent.  DEBUG2 and DEBUG3 each specify
# higher levels of debugging output.  Logging with a DEBUG level
# violates the privacy of users and is not recommended.
##
LogLevel INFO

## Specifies whether root can log in using ssh(1).  The argument must
# be yes, prohibit-password, forced-commands-only, or no.  The default
# is prohibit-password.  If this option is set to prohibit-password
# (or its deprecated alias, without-password), password and
# keyboard-interactive authentication are dis‐ abled for root.  If
# this option is set to forced-commands-only, root login with public
# key authentication will be allowed, but only if the command option
# has been specified (which may be useful for taking remote backups
# even if root login is normally not allowed).  All other
# authentication methods are disabled for root.  If this option is set
# to no, root is not allowed to log in.
##
PermitRootLogin no

## X11Forwarding: Specifies whether X11 forwarding is permitted.  The
# argument must be yes or no.  The default is no.  When X11 forwarding
# is enabled, there may be additional exposure to the server and to
# client displays if the sshd(8) proxy display is configured to listen
# on the wildcard address (see X11UseLocalhost), though this is not
# the default.  Additionally, the authentication spoofing and
# authentication data verification and substitution occur on the
# client side.  The security risk of using X11 forwarding is that the
# client's X11 display server may be exposed to attack when the SSH
# client requests forwarding (see the warnings for ForwardX11 in
# ssh_config(5)).  A system administrator may have a stance in which
# they want to protect clients that may expose themselves to attack by
# unwittingly requesting X11 forwarding, which can warrant a no
# setting.  Note that disabling X11 forwarding does not prevent users
# from forwarding X11 traffic, as users can always install their own
# forwarders.
##

####
# x2goserver
# See: https://wiki.archlinux.org/index.php/OpenSSH#X11_forwarding
####
X11Forwarding yes

#Subsystem sftp internal-sftp
#Match group filetransfer
#    ChrootDirectory %h
#    X11Forwarding no
#    AllowTcpForwarding no
#    ForceCommand internal-sftp

##
# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
##
UsePAM yes

########################## DEFAULT OPTIONS ##########################
#                                                                   #
#####################################################################

## Specifies whether TCP forwarding is permitted.  The available
# options are yes (the default) or all to allow TCP forwarding, no to
# prevent all TCP forwarding, local to allow local (from the
# perspective of ssh(1)) forwarding only or remote to allow remote
# forwarding only.  Note that disabling TCP forwarding does not
# improve security unless users are also denied shell access, as they
# can always install their own forwarders.
##
#AllowTcpForwarding yes

## Specifies the file that contains the public keys used for user
# authentication.  The format is described in the AUTHORIZED_KEYS FILE
# FORMAT section of sshd(8).  Arguments to AuthorizedKeysFile accept
# the tokens described in the TOKENS section.  After expansion,
# AuthorizedKeysFile is taken to be an absolute path or one relative
# to the user's home directory.  Multiple files may be listed,
# separated by whitespace.  Alternately this option may be set to none
# to skip checking for user keys in files.  The default is
# ".ssh/authorized_keys .ssh/authorized_keys2".
##
#AuthorizedKeysFile      .ssh/authorized_keys

## Specifies whether challenge-response authentication is allowed
# (e.g. via PAM or through authentication styles supported in
# login.conf(5)) The default is yes.
#ChallengeResponseAuthentication yes

## Specifies whether rhosts or /etc/hosts.equiv authentication
# together with successful public key client host authentication is
# allowed (host-based authentication).  The default is no.
##
#HostbasedAuthentication no

## Specifies that .rhosts and .shosts files will not be used in
# HostbasedAuthentication.
# /etc/hosts.equiv and /etc/ssh/shosts.equiv are still used.  The default is yes.
##
#IgnoreRhosts yes

## Specifies whether sshd(8) should ignore the user's
# ~/.ssh/known_hosts during HostbasedAuthentication and use only the
# system-wide known hosts file /etc/ssh/known_hosts.  The default is
# “no”.
##
#IgnoreUserKnownHosts no

## The server disconnects after this time if the user
# has not successfully logged in.  If the value is 0, there is no time
# limit.  The default is 120 seconds.
##
#LoginGraceTime 120

#MaxStartups 10:30:60
#Banner /etc/issue.net

#UseLogin no

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

## Specifies the local addresses sshd(8) should listen on.  The
#  following forms may be used:
#           ListenAddress hostname|address [rdomain domain]
#           ListenAddress hostname:port [rdomain domain]
#           ListenAddress IPv4_address:port [rdomain domain]
#           ListenAddress [hostname|address]:port [rdomain domain]
##
#ListenAddress ::

# Change to no to disable tunnelled clear text passwords
#PasswordAuthentication yes

## When password authentication is allowed, it specifies whether the
# server allows login to accounts with empty password strings.  The
# default is no.
##
#PermitEmptyPasswords no

## Specifies whether sshd(8) should print the date and time of the
# last user login when a user logs in interactively.  The default is
# yes.
##
#PrintLastLog yes

## Specifies whether sshd(8) should print /etc/motd when a user logs
# in interactively.  (On some systems it is also printed by the shell,
# /etc/profile, or equivalent.)  The default is yes.
##
PrintMotd yes

## Specifies whether public key authentication is allowed.  The
#  default is yes.
##
#PubkeyAuthentication yes

# Lifetime and size of ephemeral version 1 server key
#KeyRegenerationInterval 3600
#ServerKeyBits 1024

## Specifies whether sshd(8) should check file modes and ownership of
# the user's files and home directory before accepting login.  This is
# normally de‐ sirable because novices sometimes accidentally leave
# their directory or files world-writable.  The default is yes.  Note
# that this does not apply to ChrootDirectory, whose permissions and
# ownership are checked unconditionally.
##
#StrictModes yes

## Subsystem: Configures an external subsystem (e.g. file transfer
# daemon).  Arguments should be a subsystem name and a command (with
# optional arguments) to exe‐ cute upon subsystem request.  The
# command sftp-server implements the SFTP file transfer subsystem.
# Alternately the name internal-sftp implements an in-process SFTP
# server.  This may simplify configurations using ChrootDirectory to
# force a different filesystem root on clients.  By default no
# subsystems are defined.
##
Subsystem sftp internal-sftp

## Gives the facility code that is used when logging messages from
# sshd(8).  The possible values are: DAEMON, USER, AUTH, LOCAL0,
# LOCAL1, LOCAL2, LO‐ CAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7.  The
# default is AUTH.
##
#SyslogFacility AUTH

## Specifies whether the system should send TCP keepalive messages to
# the other side.  If they are sent, death of the connection or crash
# of one of the machines will be properly noticed.  However, this
# means that connections will die if the route is down temporarily,
# and some people find it annoy‐ ing.  On the other hand, if TCP
# keepalives are not sent, sessions may hang indefinitely on the
# server, leaving "ghost" users and consuming server resources.  The
# default is yes (to send TCP keepalive messages), and the server will
# notice if the network goes down or the client host crashes.  This
# avoids infinitely hanging sessions.  To disable TCP keepalive
# messages, the value should be set to no.
##
#TCPKeepAlive yes

## Specifies the first display number available for sshd(8)'s X11
# forwarding.  This prevents sshd from interfering with real X11
# servers.  The default is 10.
##
#X11DisplayOffset 10

## Specifies whether sshd(8) should bind the X11 forwarding server to
# the loopback address or to the wildcard address.  By default, sshd
# binds the for‐ warding server to the loopback address and sets the
# hostname part of the DISPLAY environment variable to localhost.
# This prevents remote hosts from connecting to the proxy display.
# However, some older X11 clients may not function with this
# configuration.  X11UseLocalhost may be set to no to specify that the
# forwarding server should be bound to the wildcard address.  The
# argument must be yes or no.  The default is yes.
##
#X11UseLocalhost yes
